//////////////////////////////////////////////////////
// LOGO
.logo {
    height: 3.25rem;
    margin-left: 2rem;
}



//////////////////////////////////////////////////////
// SEARCH
.search {
    flex: 0 0 40%; // Takes up 40% of header section

    display: flex; // Flex item is also flex container now
    align-items: center; // Center at cross axis
    justify-content: center; // Center at main axis

    @media only screen and (max-width: $bp-smallest) {
        order: 1; // Move search bar to the last position 
        flex: 0 0 100%; // Element takes up 100% of width -> in combination with flex-wrap it is moved to new line
        background-color: var(--color-grey-light-2); // Put background-color on whole element -> looks more natural
    }

    &__input {
        font-family: inherit;
        font-size: inherit;
        color: inherit;

        width: 90%; // 90 & of 40% header section
        background-color: var(--color-grey-light-2);
        border: none;
        padding: .7rem 2rem;
        border-radius: 100px; // Rounded edges in search bar -> just high number
        margin-right: -3.25rem; // Button moves on top of the input

        transition: all .2s;

        &:focus {
            outline: none;
            width: 100%; // Effect: increase horizontal width
            background-color: var(--color-grey-light-3); // Make darker
        }

        &::-webkit-input-placeholder {
            font-weight: 100;
            color: var(--color-grey-light-4);

        }
    }

    &__input:focus + &__button {
        background-color: var(--color-grey-light-3); // Button has same bg color as input
    }

    &__button {
        border: none;
        background-color: var(--color-grey-light-2);

        &:focus {
            outline: none;
        }

        &:active {
            transform: translateY(2px); // Move down when clicked
        }
    }

    &__icon {
        // Format svg icon -> set height & width
        height: 2rem;
        width: 2rem;
        fill: var(--color-grey-dark-3); // Change svg color
    }
}




//////////////////////////////////////////////////////
// USER-NAV
.user-nav {
    align-self: stretch; // Stretch height to take up full height of parent element (here: header)

    display: flex;
    align-items: center;

    & > * {
        // Select all direct children (here: icon-box and user)
        padding: 0 2rem;
        cursor: pointer;
        height: 100%; // Hover effect over whole height

        display: flex;
        align-items: center;
    }

    & > *:hover {
        background-color: var(--color-grey-light-2);
    }

    &__icon-box {
        position: relative;
    }

    &__icon {
        height: 2.25rem;
        width: 2.25rem;
        fill: var(--color-grey-dark-2);
    }

    &__notification {
        font-size: .8rem;
        height: 1.75rem;
        width: 1.75rem;
        border-radius: 50%;
        background-color: var(--color-primary);
        color: #fff;

        // Positioning of element
        position: absolute; // -> Set parent element position to relative; used icon-box, because usage on svg problematic (icon)
        top: 1.5rem;
        right: 1.1rem;

        // Flexbox to center text
        display: flex;
        justify-content: center;
        align-items: center;
    }

    &__user-photo {
        height: 3.75rem;
        border-radius: 50%;
        margin-right: 1rem;
    }


    // Needed for child element - User Settings
    &__user {
        position: relative; // Needed to use absokute positioning in child-element (.user-settings)
    }

    &__user:hover .user-settings {
        visibility: visible;
    }

    &__user:hover .user-settings__menu {
        transform: scaleY(1);
        display: block;
    }
}

//////////////////////////////////////////////////////
// EXTENDED: USER SETTINGS
.user-settings {
    // Positioning of pop-up
    position: absolute;
    top: 7rem;
    right: 0;
    width: 18rem;
    z-index: 200;


    // Popup menu
    visibility: hidden;
    
    
    &__menu {
        // List
        list-style: none;
        background-color: #fff; // Same color as header
       
        
        // Flex container
        display: flex;
        flex-direction: column;
        transform-origin: top;

        // Popup menu
        transform: scaleY(0); // Menu not shown in initial state
        transition: transform 0.2s cubic-bezier(1, 0.01, 0, 1.01);
    }

    &__option {
        position: relative;

        &:not(:last-child) {
            margin-bottom: .5rem; // Make items bigger
        }

        &::before {
            // Position of color bar -> starting position of effect
            content: "";
            position: absolute;
            top: 0;
            left: 0rem;
            background-color: var(--color-primary);
            width: 3px;
    
            // Popup Menu
            height: 0; // Not shown in intial state
            transition: height 0.2s, width 0.3s cubic-bezier(1, 0.01, 0, 1.01) 0.2s;
            
            z-index: 10;
            
    
            // Normale state shows no line
            // transform-origin: bottom; // Default set to center
            /* transform: scaleY(0);
            transition: transform .1s,
                        width .4s cubic-bezier(1,0,0,1) .1s, // Delay needed to see animation in x-direction (.2s)
                        background-color .1s;
            */
    
        }

        &:hover::before {
            // Line gets scaled to full width when hover
            // transform: scaleY(1);
            width: 100%; // Expands from 3px to 100%
    
            // Popup menu
            height: 100%; 
        }
    }

    
    

    &__link:link,
    &__link:visited {
        color: currentColor;
        text-decoration: none; // Remove underline
        text-transform: uppercase;
        display: block;
        padding: 1.5rem 3rem;
        position: relative; // Needed to make z-index work
        z-index: 100;

        display: flex;
        align-items: center;

        transition: color 0.2s 0.3s; // Delay for color switch when hovered
    }

    &__link:hover {
        color: #fff; // When hovered, change font color
    }

    &__icon {
        // Size as squares
        width: 1.5rem;
        height: 1.5rem;

        margin-right: 2rem;
        fill: currentColor; // Uses volor of current element or parent element
    }
    
}


//////////////////////////////////////////////////////
// SIDE NAVIGATION
.side-nav {
    font-size: 1.4rem;
    list-style: none;
    margin-top: 3.5rem;

    @media only screen and (max-width: $bp-medium) {
        display: flex; // Elements will be side-by-side instead of stacked over each other 
        margin: 0; // remove initial margin-top
    }

    &__item {
        position: relative; // Needed for item::before

        &:not(:last-child) {
            margin-bottom: .5rem;

            @media only screen and (max-width: $bp-medium) {
                margin: 0;
            }
        }

        @media only screen and (max-width: $bp-medium) {
            flex: 1; // All four flex items can grow as much as they can -> equaly occupy together whole width
        }
    }


    // Hover effect
    &__item::before {
        // Small line of side-nav
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        height: 100%; // Same with as list item
        width: 3px;
        background-color: var(--color-primary);

        // Normale state shows no line
        // transform-origin: bottom; // Default set to center
        transform: scaleY(0);
        transition: transform .2s,
                    width .4s cubic-bezier(1,0,0,1) .2s, // Delay needed to see animation in x-direction (.2s)
                    background-color .1s; 
    }


    &__item:hover::before,
    &__item--active::before {
        // Styling applied to first item (--active) in default

        // Line gets scaled to full width when hover
        transform: scaleY(1);
        width: 100%; // Expands from 3px to 100%
    }

    &__item:active::before {
        // Show that user clicked on item
        background-color: var(--color-primary-light);
    }


    &__link:link,
    &__link:visited {
        color: var(--color-grey-light-1);
        text-decoration: none; // Remove underline
        text-transform: uppercase;
        display: block;
        padding: 1.5rem 3rem;
        position: relative; // Needed to make z-index work
        z-index: 10;

        display: flex;
        align-items: center;

        @media only screen and (max-width: $bp-medium) {
            justify-content: center; // Center text in box
            padding: 2rem;
        }

        @media only screen and (max-width: $bp-small) {
            flex-direction: column; // Put symbol above text
            padding: 1.5rem;
        }
    }

    &__icon {
        // Size as squares
        width: 1.75rem;
        height: 1.75rem;

        margin-right: 2rem;
        fill: currentColor; // Uses volor of current element or parent element

        @media only screen and (max-width: $bp-small) {
            margin-right: 0; // Remove right margin
            margin-bottom: .7rem; // Small margin between icon and text
            width:  1.5rem; // Decrease icon size
            height: 1.5rem;
        }
    }
}

//////////////////////////////////////////////////////
// EXTENDED - MESSAGE BOX
.inbox {
    // Positioning of pop-up
    position: absolute;
    top: 7rem;
    right: 0;
    width: 40rem;
    z-index: 200;

    // Coloring
    background-color: var(--color-grey-dark-1);
    color: var(--color-grey-light-1);

    &__header {
        padding: 2rem;
        
        // Inbox to center, SVGs to borders
        display: flex;
        align-items: center;
        justify-content: space-between;
        
    }

    &__icon {

        
    }

    &__separator {
        content:"";
        height: 1px;
        width: 100%;
        background-color: var(--color-grey-dark-3);
        
    }

    &__search {

    }

    &__photo {
        height: 7rem;
        width: 7rem;
        border-radius: 50%;
        margin-right: 4rem;
    }

    &__message {
       padding: 1rem 0;

        &-box {
            
        }

        &-detail {
            display: flex;
            align-items: center;
        }

        &-name {

        }

        &-time {

        }

        &-content {

        }
    }
}



//////////////////////////////////////////////////////
// LEGAL TEXT
.legal {
    font-size: 1.2rem;
    color: var(--color-grey-light-4);
    text-align: center;
    padding: 2.5rem;

    @media only screen and (max-width: $bp-medium) {
        display: none; // Remove legal text
    }
}



//////////////////////////////////////////////////////
// GALLERY

.gallery {
    display: flex; // Sets picture automatically side-by-side

    &__photo {
        width: 100%;
        display: block; // Ensures that no whitespace is below pictures what would happen if format as inline-block (default)
    }
}



//////////////////////////////////////////////////////
// HOTEL OVERVIEW
.overview {
    border-bottom: var(--line);

    display: flex;
    align-items: center; // vertically aligned

    &__heading {
        font-size: 2.25rem;
        font-weight: 300;
        text-transform: uppercase;
        letter-spacing: 1px;
        padding: 1.5rem 3rem; // Space around the text -> "breathing space"; defines height of element

        @media only screen and (max-width: $bp-small) {
            font-size: 1.8rem;
            padding: 1.25rem 2rem;
        }
    }

    &__stars {
        // flex: 1; // Would grow and occupy all of the "empty" space -> no ideal solution because element should only take up the space it needs and not the whole white space -> use "margin auto"
        margin-right: auto; // Sets starts to the left, takes up only space need for element, left space is used "as margin"

        display: flex; // icon-stars has small white space below them -> Fix: Set parent elemtn (here: stars) to flex
    }

    &__icon-star,
    &__icon-location {
        width: 1.75rem;
        height: 1.75rem;
        fill: var(--color-primary);
    }

    &__location {
        font-size: 1.2rem;
        display: flex;
        vertical-align: center;
    }

    &__icon-location {
        margin-right: 1.5rem; // Margin between icon and text
    }

    &__rating {
        // Pink container
        background-color: var(--color-primary);
        color: #fff;
        margin-left: 3rem;
        padding: 0 2.25rem; 

        align-self: stretch; // Overwrite setting from parent element -> element gets strethed and occipyies all available space

        display: flex;
        flex-direction: column; // Else components would be set side-by-side with the following two settings
        align-items: center;
        justify-content: center;

        @media only screen and (max-width: $bp-small) {
            padding: 0 1.5rem;
        }
    }

    &__rating-average {
        font-size: 2.25rem;
        font-weight: 300;
        margin-bottom: -3px; // Decrease space to bottom

        @media only screen and (max-width: $bp-small) {
            font-size: 1.8rem;
        }
    }

    &__rating-count {
        font-size: .8rem;
        text-transform: uppercase;

        @media only screen and (max-width: $bp-small) {
            font-size: .5rem;
        }
    }
}



//////////////////////////////////////////////////////
//  BUTTON INLINE
.btn-inline {
    border: none; // Remove defalt button
    color: var(--color-primary);
    font-size: inherit;
    border-bottom: 1px solid currentColor; // Border has same color as text
    padding-bottom: 2px; // Space between text and border
    display: inline-block;
    background-color: transparent; // Makes button more modular -> just takes color of element in the background
    cursor: pointer;

    transition: all .2s;


    & span {
        margin-left: 3px;
        transition: margin-left .2s;
    }

    &:hover {
        color: var(--color-grey-dark-1); // Border automatically gets same color, because usage of currentColor

        span {
            margin-left: 8px; // Increased from 3px, horizontally
        }
    }

    &:focus {
        outline: none; // Remove default blue border
        animation: pulsate 1s infinite; // Call keyframes animation; infinirte animation once clicked
    }
}

// Animation of button
@keyframes pulsate{
    0% {
        // Initial state
        transform: scale(1);
        box-shadow: none;
    }

    50% {
        transform: scale(1.05);
        box-shadow: 0 1rem 4rem rgba(0,0,0,0.25);
    }

    100% {
        // Final state (same as initial)
        transform: scale(1);
        box-shadow: none;
    }
}



//////////////////////////////////////////////////////
//  PARAGRAPH
.paragraph:not(:last-of-type) {
    // last-child does not work in this case; because its not the last child of the container
    margin-bottom: 2rem;
}



//////////////////////////////////////////////////////
//  LIST
.list {
    list-style: none; // Remove bullets
    margin: 3rem 0;
    padding: 3rem 0;
    border-top: var(--line);
    border-bottom: var(--line);

    display: flex; // Will try to put all elements next to each other -> looks bad
    flex-wrap: wrap; // Lines are put into new lines (but still "side-by-side")

    &__item {
        flex: 0 0 50%; // Two elements will be side-by-side
        margin-bottom: .7rem;
    }

    // Include svg file here in css instead of in html
    // Reason: only have to include it once instead of multiple times (here: 8)
    // The usage of sprite is complicated in CSS, better to just use svg item directly
    &__item:before {
        // Before each item element pseudo element is created;
        content: ""; // ALWAYS specify content property!
        display: inline-block;
        height: 1rem;
        width: 1rem;
        margin-right: .7rem;

        // Old approach -> Problem: If included as background image, color can not be changed
        // background-image: url(../img/chevron-thin-right.svg);
        // background-size: cover;

        // NEWER BROWSERS - MASKS
        // New approach: usage of masks (works in newer browsers)
        // Masks: Defines an area where its possible to look through the item (masks) to see the background-color -> define background color & put masks in front of it; bg-color only shown where icon is placed, rest is covered
        @supports (-webkit-mask-image: url()) or (mask-image: url()) {
            // Have to specifiy some value; just used url() -> Has nothing to say here
            background-color: var(--color-primary);
            -webkit-mask-image: url(../img/chevron-thin-right.svg);
            -webkit-mask-size: cover;

            mask-image: url(../img/chevron-thin-right.svg);
            mask-size: cover;
        }
        
        // OLDER BROWSERS - WORKAORUND
        
        
    }
}





//////////////////////////////////////////////////////
//  RECOMMEND
.recommend {
    font-size: 1.3rem;
    color: var(--color-grey-dark-3);

    display: flex;
    align-items: center;

    &__count {
        // Element that contains text
        margin-right: auto; // Photos will be pushed to the right side
    }

    &__friends {
        display: flex; // Photos will always stay side-by-side also when decreasing the window width
    }


    &__photo {
        box-sizing: content-box; // Border will be added to padding and width of photo; border-box includes them in the whole size
        // Put pictures in circles
        height: 4rem;
        width: 4rem;
        border-radius: 50%;
        border: 3px solid #fff; // White border around circle
        
        &:not(:last-child) {
            // Overlap pictures over each other
            margin-right: -2rem;
        }
    }
}



//////////////////////////////////////////////////////
//  REVIEWS
.review {
    background-color: #fff;
    box-shadow: var(--shadow-light);
    padding: 3rem;
    margin-bottom: 3.5rem;
    position: relative; // Needed for absolute positioning in &::before
    overflow: hidden; // quotation mark stops overflowing

    @media only screen and (max-width: $bp-medium) {
        padding: 2rem;
        margin-bottom: 3rem;
    }

    &__text {
        margin-bottom: 2rem;
        z-index: 10;
        position: relative; // Must be set to use z-index
    }

    &__user {
        display: flex;
        align-items: center;
    }

    &__photo {
        height: 4.5rem;
        width: 4.5rem;
        border-radius: 50%;
        margin-right: 1.5rem;
    }

    &__user-box {
        margin-right: auto; // Pushed to right
    }

    &__user-name {
        font-size: 1.1rem;
        font-weight: 600; // Bold
        text-transform: uppercase;
        margin-bottom: .4rem;
    }

    &__user-date {
        font-size: 1rem;
        color: var(--color-grey-dark-3);
    }

    &__rating {
        color: var(--color-primary);
        font-size: 2.2rem;
        font-weight: 300;
    }

    &::before {
        // Quotation marks using html entities
        content: "\201C";
        // Posiitoning of sign in review box
        position: absolute;
        top: -1.75rem; 
        left: -1rem; // Decreases size of quotation marks
        line-height: 1;
        font-size: 20rem;
        color: var(--color-grey-light-2);
        font-family: sans-serif; // use default sans-serif instead of inherting the setting
        z-index: 1;
    }
}

//////////////////////////////////////////////////////
//  CALL TO ACTION
.cta {
    padding: 3.5rem 0;
    text-align: center; // Automatically centers h2 and button

    @media only screen and (max-width: $bp-medium) {
        padding: 2.5rem 0;
    }

    &__book-now {
        font-size: 2rem;
        font-weight: 300;
        margin-bottom: 2.5rem;
        text-transform: uppercase;
    }
}


//////////////////////////////////////////////////////
//  BUTTON
.btn {
    font-size: 1.5rem;
    font-weight: 300;
    text-transform: uppercase;
    border-radius: 100px; // Rounded corners
    border: none;
    background-image: linear-gradient(to right, var(--color-primary), var(--color-primary-dark));
    color: #fff;
    position: relative; // Needed for invisible 
    overflow: hidden; // Hides invisible part
    cursor: pointer;


    & > * {
        // Select all child elements, put repeated code here
        display: inline-block;
        height: 100%;
        width: 100%;
        transition: all .2s; // Does not work with background-image -> linear gradient not animated
    }
    &__visible {
        padding: 2rem 7.5rem;
    }

    &__invisible {
        position: absolute; // Neede to put text outside the button
        padding: 2rem 0rem;
        left: 0;
        top: -100%;
    }

    &:hover {
        // Change direction of color gradient 
        background-image: linear-gradient(to right, var(--color-primary-light), var(--color-primary-dark));
    }
    &:hover &__visible {
        transform: translateY(100%); // Text is translate down -> looks like moving out
    }

    &:hover &__invisible {
        top: 0; // Move down from -100%
    }

    &:focus {
        outline: none;
        animation: pulsate 1s infinite;
    }
}